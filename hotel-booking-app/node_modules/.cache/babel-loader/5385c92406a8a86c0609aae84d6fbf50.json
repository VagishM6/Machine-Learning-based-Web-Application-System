{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vagis_ern\\\\Desktop\\\\home-booking-app-frontend-main\\\\src\\\\components\\\\notification.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { Snackbar } from '@material-ui/core';\nimport notificationService from '../services/notificationService'; // function to return the alert notification\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Alert(props) {\n  return /*#__PURE__*/_jsxDEV(MuiAlert, {\n    elevation: 6,\n    variant: \"filled\",\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 10\n  }, this);\n} // function that uses the use state of the react hook to set the notification to be displayed\n\n\n_c = Alert;\nexport default function Notification() {\n  _s();\n\n  const [notificationData, setNotificationData] = useState({\n    open: false\n  });\n  useEffect(() => {\n    const subscription = notificationService.events$.subscribe(notification => setNotificationData(notification));\n    return () => subscription.unsubscribe();\n  });\n  return /*#__PURE__*/_jsxDEV(Snackbar, {\n    open: notificationData.open,\n    anchorOrigin: {\n      vertical: \"top\",\n      horizontal: \"center\"\n    },\n    message: notificationData.message,\n    autoHideDuration: 3500,\n    children: /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"success\",\n      onClose: () => notificationService.close(),\n      autoHideDuration: 3500,\n      children: notificationData.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Notification, \"QhY9/q59/hs/878DlIYj2rSUzgQ=\");\n\n_c2 = Notification;\n;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Alert\");\n$RefreshReg$(_c2, \"Notification\");","map":{"version":3,"sources":["C:/Users/vagis_ern/Desktop/home-booking-app-frontend-main/src/components/notification.js"],"names":["React","useState","useEffect","MuiAlert","Snackbar","notificationService","Alert","props","Notification","notificationData","setNotificationData","open","subscription","events$","subscribe","notification","unsubscribe","vertical","horizontal","message","close"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,OAAOC,mBAAP,MAAgC,iCAAhC,C,CAEA;;;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACpB,sBAAO,QAAC,QAAD;AAAU,IAAA,SAAS,EAAE,CAArB;AAAwB,IAAA,OAAO,EAAC,QAAhC;AAAA,OAA6CA;AAA7C;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,C,CAED;;;KAJSD,K;AAKT,eAAe,SAASE,YAAT,GAAyB;AAAA;;AAEpC,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CT,QAAQ,CAAC;AAAEU,IAAAA,IAAI,EAAE;AAAR,GAAD,CAAxD;AAEAT,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,YAAY,GAAGP,mBAAmB,CAACQ,OAApB,CAA4BC,SAA5B,CAAsCC,YAAY,IAAIL,mBAAmB,CAACK,YAAD,CAAzE,CAArB;AAEA,WAAO,MAAMH,YAAY,CAACI,WAAb,EAAb;AACH,GAJQ,CAAT;AAMA,sBACE,QAAC,QAAD;AAAU,IAAA,IAAI,EAAEP,gBAAgB,CAACE,IAAjC;AAAuC,IAAA,YAAY,EAAE;AAAEM,MAAAA,QAAQ,EAAE,KAAZ;AAAmBC,MAAAA,UAAU,EAAE;AAA/B,KAArD;AAAgG,IAAA,OAAO,EAAET,gBAAgB,CAACU,OAA1H;AAAmI,IAAA,gBAAgB,EAAE,IAArJ;AAAA,2BACE,QAAC,KAAD;AAAO,MAAA,QAAQ,EAAC,SAAhB;AAA0B,MAAA,OAAO,EAAE,MAAMd,mBAAmB,CAACe,KAApB,EAAzC;AAAsE,MAAA,gBAAgB,EAAE,IAAxF;AAAA,gBACGX,gBAAgB,CAACU;AADpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOH;;GAjBuBX,Y;;MAAAA,Y;AAiBvB","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport MuiAlert from \"@material-ui/lab/Alert\";\nimport { Snackbar } from '@material-ui/core';\nimport notificationService from '../services/notificationService';\n\n// function to return the alert notification\nfunction Alert(props) {\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\n}\n\n// function that uses the use state of the react hook to set the notification to be displayed\nexport default function Notification () {\n\n    const [notificationData, setNotificationData] = useState({ open: false });\n\n    useEffect(() => {\n        const subscription = notificationService.events$.subscribe(notification => setNotificationData(notification));\n\n        return () => subscription.unsubscribe();\n    });\n\n    return (\n      <Snackbar open={notificationData.open} anchorOrigin={{ vertical: \"top\", horizontal: \"center\" }} message={notificationData.message} autoHideDuration={3500}>\n        <Alert severity=\"success\" onClose={() => notificationService.close()} autoHideDuration={3500}>\n          {notificationData.message}\n        </Alert>\n      </Snackbar>\n    );\n};"]},"metadata":{},"sourceType":"module"}